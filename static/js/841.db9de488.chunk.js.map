{"version":3,"file":"static/js/841.db9de488.chunk.js","mappings":"2QAGaA,EAAgBC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2GAO1BC,GAAeJ,EAAAA,EAAAA,GAAOK,EAAAA,IAAPL,CAAsBM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2CAKrCI,EAAkBP,EAAAA,EAAOQ,EAACC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sE,UCZ1BO,GAAkBV,EAAAA,EAAAA,GAAOW,EAAAA,IAAPX,CAA4BE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2C,UCkE3D,EA5De,WAAO,IAADS,EAAAC,EACnBC,GAA0DC,EAAAA,EAAAA,KAAlDC,EAAUF,EAAVE,WAAYC,EAAKH,EAALG,MAAOC,EAAKJ,EAALI,MAAOC,EAAML,EAANK,OAAQC,EAAWN,EAAXM,YACpCC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAA2B,QAArBZ,EAAe,QAAfC,EAACQ,EAASI,aAAK,IAAAZ,OAAA,EAAdA,EAAgBa,YAAI,IAAAd,EAAAA,EAAI,KAE3De,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAadI,EAXc,WAClB,OAAQd,EAAOe,OACb,IAAK,aACH,OAAOjB,EAAME,QAAO,SAAAgB,GAAI,OAAIf,EAAYgB,SAASD,EAAKE,GAAG,IAC3D,IAAK,SACH,OAAOpB,EAAME,QAAO,SAAAgB,GAAI,OAAKf,EAAYgB,SAASD,EAAKE,GAAG,IAC5D,QACE,OAAOpB,EAEb,CAEsBqB,GAChBC,EAA+C,IAAzBN,EAAcO,OAY1C,OAVAC,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLvB,GACF,CACF,GAAG,CAACA,KAEJuB,EAAAA,EAAAA,YAAU,WACRzB,EAAWe,EACb,GAAG,CAACf,EAAYe,KAGdW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,sBAETF,EAAAA,EAAAA,MAAC3C,EAAa,CAAA6C,SAAA,EACZF,EAAAA,EAAAA,MAACK,EAAAA,GAAS,CAACC,GAAIzB,EAAoB0B,QAAQL,SAAA,EACzCC,EAAAA,EAAAA,KAACzC,EAAY,IAAG,aAGjBmC,GACCG,EAAAA,EAAAA,MAACnC,EAAe,CAAAqC,SAAA,CAAC,sCAEfC,EAAAA,EAAAA,KAAA,SAAM,iBAGRA,EAAAA,EAAAA,KAACK,EAAAA,GAAU,CAACjB,cAAeA,KAE3BM,IACAG,EAAAA,EAAAA,MAACS,EAAAA,GAAW,CAACC,KAAK,SAASC,QAAS,kBAAMrB,GAAQ,SAAAD,GAAI,OAAIA,EAAO,CAAC,GAAC,EAACa,SAAA,CAAC,aAEnEC,EAAAA,EAAAA,KAACnC,EAAe,YAM5B,C","sources":["pages/Tweets/tweets.styled.js","components/LoadMoreButton/loadMoreButton.styled.js","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { MdArrowBackIos } from 'react-icons/md';\n\nexport const TweetsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const BackLinkIcon = styled(MdArrowBackIos)`\n  width: 24px;\n  height: 24px;\n`;\n\nexport const NoTweetsMessage = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 2;\n`;\n","import styled from '@emotion/styled';\nimport { MdOutlineDownloading } from 'react-icons/md';\n\nexport const LoadingMoreIcon = styled(MdOutlineDownloading)`\n  width: 24px;\n  height: 24px;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { useUsers } from 'hooks/useUsers';\nimport { TweetsList } from 'components';\nimport { BackLinkIcon, NoTweetsMessage, TweetsWrapper } from './tweets.styled';\nimport { GoBackBtn, LoadMoreBtn } from 'styles/button.styled';\nimport { LoadingMoreIcon } from 'components/LoadMoreButton/loadMoreButton.styled';\n\nconst Tweets = () => {\n  const { fetchUsers, users, clear, filter, followerIds } = useUsers();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const [page, setPage] = useState(1);\n\n  const filterUsers = () => {\n    switch (filter.value) {\n      case 'followings':\n        return users.filter(user => followerIds.includes(user.id));\n      case 'follow':\n        return users.filter(user => !followerIds.includes(user.id));\n      default:\n        return users;\n    }\n  };\n\n  const filteredUsers = filterUsers();\n  const showNoTweetsMessage = filteredUsers.length === 0;\n\n  useEffect(() => {\n    return () => {\n      clear();\n    };\n  }, [clear]);\n\n  useEffect(() => {\n    fetchUsers(page);\n  }, [fetchUsers, page]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tweetbook</title>\n      </Helmet>\n      <TweetsWrapper>\n        <GoBackBtn to={backLinkLocationRef.current}>\n          <BackLinkIcon />\n          Go back\n        </GoBackBtn>\n        {showNoTweetsMessage ? (\n          <NoTweetsMessage>\n            Sorry, no tweets for your request.\n            <br /> Try again\n          </NoTweetsMessage>\n        ) : (\n          <TweetsList filteredUsers={filteredUsers} />\n        )}\n        {!showNoTweetsMessage && (\n          <LoadMoreBtn type=\"button\" onClick={() => setPage(page => page + 1)}>\n            Load more\n            <LoadingMoreIcon />\n          </LoadMoreBtn>\n        )}\n      </TweetsWrapper>\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["TweetsWrapper","styled","div","_templateObject","_taggedTemplateLiteral","BackLinkIcon","MdArrowBackIos","_templateObject2","NoTweetsMessage","p","_templateObject3","LoadingMoreIcon","MdOutlineDownloading","_location$state$from","_location$state","_useUsers","useUsers","fetchUsers","users","clear","filter","followerIds","location","useLocation","backLinkLocationRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","page","setPage","filteredUsers","value","user","includes","id","filterUsers","showNoTweetsMessage","length","useEffect","_jsxs","_Fragment","children","_jsx","Helmet","GoBackBtn","to","current","TweetsList","LoadMoreBtn","type","onClick"],"sourceRoot":""}