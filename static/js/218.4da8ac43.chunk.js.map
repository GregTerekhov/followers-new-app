{"version":3,"file":"static/js/218.4da8ac43.chunk.js","mappings":"+PAEaA,EAAgBC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kLAW1BC,EAAkBJ,EAAAA,EAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,sEAM1BI,EAAaP,EAAAA,EAAOQ,GAAEC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yZ,oBC4DnC,EAvEe,WAAO,IAADO,EAAAC,EACnBC,GACEC,EAAAA,EAAAA,KADMC,EAAUF,EAAVE,WAAYC,EAAKH,EAALG,MAAOC,EAAKJ,EAALI,MAAOC,EAASL,EAATK,UAAWC,EAAMN,EAANM,OAAQC,EAAWP,EAAXO,YAE/CC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAA2B,QAArBb,EAAe,QAAfC,EAACS,EAASI,aAAK,IAAAb,OAAA,EAAdA,EAAgBc,YAAI,IAAAf,EAAAA,EAAI,KAE3DgB,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAadI,EAXc,WAClB,OAAQd,EAAOe,OACb,IAAK,aACH,OAAOlB,EAAMG,QAAO,SAAAgB,GAAI,OAAIf,EAAYgB,SAASD,EAAKE,GAAG,IAC3D,IAAK,SACH,OAAOrB,EAAMG,QAAO,SAAAgB,GAAI,OAAKf,EAAYgB,SAASD,EAAKE,GAAG,IAC5D,QACE,OAAOrB,EAEb,CAEsBsB,GAChBC,EAA+C,IAAzBN,EAAcO,SAAiBtB,EAY3D,OAVAuB,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLxB,GACF,CACF,GAAG,CAACA,KAEJwB,EAAAA,EAAAA,YAAU,WACR1B,EAAWgB,EACb,GAAG,CAAChB,EAAYgB,KAGdW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,sBAETF,EAAAA,EAAAA,MAAC1C,EAAa,CAAA4C,SAAA,EACZC,EAAAA,EAAAA,KAACE,EAAAA,GAAS,CAACC,GAAIzB,EAAoB0B,QAAQL,SAAC,YAC3CL,GACCG,EAAAA,EAAAA,MAACrC,EAAe,CAAAuC,SAAA,CAAC,sCAEfC,EAAAA,EAAAA,KAAA,SAAM,iBAGRA,EAAAA,EAAAA,KAACrC,EAAU,CAAAoC,SACRX,GACCA,EAAciB,KACZ,SAAAC,EAA0CC,GAAK,IAA5Cf,EAAEc,EAAFd,GAAIF,EAAIgB,EAAJhB,KAAMkB,EAAMF,EAANE,OAAQC,EAASH,EAATG,UAAWC,EAAMJ,EAANI,OAAM,OACpCV,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAERnB,GAAIA,EACJF,KAAMA,EACNkB,OAAQA,EACRC,UAAWA,EACXC,OAAQA,GALHH,EAML,OAKVb,IACAM,EAAAA,EAAAA,KAACY,EAAAA,GAAW,CAACC,KAAK,SAASC,QAAS,kBAAM3B,GAAQ,SAAAD,GAAI,OAAIA,EAAO,CAAC,GAAC,EAACa,SAAC,mBAO/E,C","sources":["pages/Tweets/Tweets.styled.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TweetsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n`;\n\nexport const NoTweetsMessage = styled.p`\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 2;\n`;\n\nexport const TweetsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 40px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 56px;\n  }\n\n  @media screen and (min-width: 960px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 80px;\n    gap: 30px;\n  }\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { useUsers } from 'hooks/useUsers';\nimport { TweetItem } from 'components';\nimport { NoTweetsMessage, TweetsList, TweetsWrapper } from './Tweets.styled';\nimport { GoBackBtn, LoadMoreBtn } from 'styles/Button.styled';\n\nconst Tweets = () => {\n  const { fetchUsers, users, clear, isLoading, filter, followerIds } =\n    useUsers();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const [page, setPage] = useState(1);\n\n  const filterUsers = () => {\n    switch (filter.value) {\n      case 'followings':\n        return users.filter(user => followerIds.includes(user.id));\n      case 'follow':\n        return users.filter(user => !followerIds.includes(user.id));\n      default:\n        return users;\n    }\n  };\n\n  const filteredUsers = filterUsers();\n  const showNoTweetsMessage = filteredUsers.length === 0 && !isLoading;\n\n  useEffect(() => {\n    return () => {\n      clear();\n    };\n  }, [clear]);\n\n  useEffect(() => {\n    fetchUsers(page);\n  }, [fetchUsers, page]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tweetbook</title>\n      </Helmet>\n      <TweetsWrapper>\n        <GoBackBtn to={backLinkLocationRef.current}>Go back</GoBackBtn>\n        {showNoTweetsMessage ? (\n          <NoTweetsMessage>\n            Sorry, no tweets for your request.\n            <br /> Try again\n          </NoTweetsMessage>\n        ) : (\n          <TweetsList>\n            {filteredUsers &&\n              filteredUsers.map(\n                ({ id, user, tweets, followers, avatar }, index) => (\n                  <TweetItem\n                    key={index}\n                    id={id}\n                    user={user}\n                    tweets={tweets}\n                    followers={followers}\n                    avatar={avatar}\n                  />\n                )\n              )}\n          </TweetsList>\n        )}\n        {!showNoTweetsMessage && (\n          <LoadMoreBtn type=\"button\" onClick={() => setPage(page => page + 1)}>\n            Load more\n          </LoadMoreBtn>\n        )}\n      </TweetsWrapper>\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["TweetsWrapper","styled","div","_templateObject","_taggedTemplateLiteral","NoTweetsMessage","p","_templateObject2","TweetsList","ul","_templateObject3","_location$state$from","_location$state","_useUsers","useUsers","fetchUsers","users","clear","isLoading","filter","followerIds","location","useLocation","backLinkLocationRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","page","setPage","filteredUsers","value","user","includes","id","filterUsers","showNoTweetsMessage","length","useEffect","_jsxs","_Fragment","children","_jsx","Helmet","GoBackBtn","to","current","map","_ref","index","tweets","followers","avatar","TweetItem","LoadMoreBtn","type","onClick"],"sourceRoot":""}